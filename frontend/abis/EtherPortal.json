{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IInputBox",
          "name": "_inputBox",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EtherTransferFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dapp",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_execLayerData",
          "type": "bytes"
        }
      ],
      "name": "depositEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInputBox",
      "outputs": [
        {
          "internalType": "contract IInputBox",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a03461007157601f61034c38819003918201601f19168301916001600160401b038311848410176100765780849260209460405283398101031261007157516001600160a01b0381168103610071576080526040516102bf908161008d823960805181818161015401526102220152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908162aace9a1461020e575063938c054f1461003857600080fd5b8160031936011261020a5780356001600160a01b038181169391848103610206576024359467ffffffffffffffff8087116102025736602388011215610202578787870135938285116101fe57366024868b0101116101fe578180809234905af1903d156101f8573d9081116101e5578551906100bf601f8201601f191660200183610251565b81528860203d92013e5b156101d557939091866024969361010d6054875183819460209c8d9a3360601b8c860152346034860152018484013781018583820152036034810184520182610251565b8551968794631789cd6360e01b8652850152856024850152805190816044860152825b8281106101ba57505090606484838383839684010152601f801991011681010301927f0000000000000000000000000000000000000000000000000000000000000000165af19081156101b15750610186578280f35b813d83116101aa575b6101998183610251565b810103126101a75738808280f35b80fd5b503d61018f565b513d85823e3d90fd5b8181018701518982016064015289968996508b945001610130565b50505051630ce8f45160e31b8152fd5b634e487b7160e01b895260418752602489fd5b506100c9565b5080fd5b8780fd5b8580fd5b8280fd5b8490346101fe57816003193601126101fe577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff82111761027357604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c5f645f17e4f58489b13e981c2d7785aac4932d883b96c00e508507a4f0f8abb64736f6c63430008140033",
    "sourceMap": "495:892:45:-:0;;;;;;;;;;;;;-1:-1:-1;;495:892:45;;;;-1:-1:-1;;;;;495:892:45;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;495:892:45;;;;;;610:20:43;;495:892:45;;;;;;;;610:20:43;495:892:45;;;;;;;;;;;;-1:-1:-1;495:892:45;;;;;;-1:-1:-1;495:892:45;;;;;-1:-1:-1;495:892:45",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604081815260048036101561001557600080fd5b600092833560e01c908162aace9a1461020e575063938c054f1461003857600080fd5b8160031936011261020a5780356001600160a01b038181169391848103610206576024359467ffffffffffffffff8087116102025736602388011215610202578787870135938285116101fe57366024868b0101116101fe578180809234905af1903d156101f8573d9081116101e5578551906100bf601f8201601f191660200183610251565b81528860203d92013e5b156101d557939091866024969361010d6054875183819460209c8d9a3360601b8c860152346034860152018484013781018583820152036034810184520182610251565b8551968794631789cd6360e01b8652850152856024850152805190816044860152825b8281106101ba57505090606484838383839684010152601f801991011681010301927f0000000000000000000000000000000000000000000000000000000000000000165af19081156101b15750610186578280f35b813d83116101aa575b6101998183610251565b810103126101a75738808280f35b80fd5b503d61018f565b513d85823e3d90fd5b8181018701518982016064015289968996508b945001610130565b50505051630ce8f45160e31b8152fd5b634e487b7160e01b895260418752602489fd5b506100c9565b5080fd5b8780fd5b8580fd5b8280fd5b8490346101fe57816003193601126101fe577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b90601f8019910116810190811067ffffffffffffffff82111761027357604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c5f645f17e4f58489b13e981c2d7785aac4932d883b96c00e508507a4f0f8abb64736f6c63430008140033",
    "sourceMap": "495:892:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;495:892:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1096:9;;;;;1078:32;;;495:892;;;;;;;;;;;;;;;;;;-1:-1:-1;;495:892:45;;;;;:::i;:::-;;;;;;;;;;1125:8;1121:67;;495:892;;;;;;;990:174:39;495:892:45;;;;;;;1265:10;;;;495:892;;990:174:39;;;495:892:45;1096:9;495:892;;;;;;;;;;;;;;;;990:174:39;495:892:45;990:174:39;;;;;;;:::i;:::-;495:892:45;;;;;;;;1347:31;;;;495:892;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:31;;:8;;495:892;1347:31;;;;;;;;;;495:892;;;1347:31;;;;;;;;;;;;:::i;:::-;;;495:892;;;;1347:31;;495:892;;;;;;1347:31;;;;;;495:892;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;495:892:45;;-1:-1:-1;495:892:45;;;1121:67;495:892;;;;1156:21;;;;;;495:892;-1:-1:-1;;;495:892:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;726:8:43;-1:-1:-1;;;;;495:892:45;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "47811": [
        {
          "start": 340,
          "length": 32
        },
        {
          "start": 546,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "depositEther(address,bytes)": "938c054f",
    "getInputBox()": "00aace9a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IInputBox\",\"name\":\"_inputBox\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EtherTransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dapp\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_execLayerData\",\"type\":\"bytes\"}],\"name\":\"depositEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInputBox\",\"outputs\":[{\"internalType\":\"contract IInputBox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_inputBox\":\"The input box used by the portal\"}},\"depositEther(address,bytes)\":{\"details\":\"All the value sent through this function is forwarded to the DApp.      If the transfer fails, `EtherTransferFailed` error is raised.\",\"params\":{\"_dapp\":\"The address of the DApp\",\"_execLayerData\":\"Additional data to be interpreted by the execution layer\"}},\"getInputBox()\":{\"returns\":{\"_0\":\"The input box\"}}},\"title\":\"Ether Portal\",\"version\":1},\"userdoc\":{\"errors\":{\"EtherTransferFailed()\":[{\"notice\":\"Raised when the Ether transfer fails.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs the portal.\"},\"depositEther(address,bytes)\":{\"notice\":\"Transfer Ether to a DApp and add an input to the DApp's input box to signal such operation. All the value sent through this function is forwarded to the DApp.\"},\"getInputBox()\":{\"notice\":\"Get the input box used by this input relay.\"}},\"notice\":\"This contract allows anyone to perform transfers of Ether to a DApp while informing the off-chain machine.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/rollups-contracts/onchain/rollups/contracts/portals/EtherPortal.sol\":\"EtherPortal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@cartesi/contracts/=lib/rollups-contracts/onchain/rollups/contracts/\",\":@cartesi/util/=lib/rollups-contracts/onchain/rollups-arbitration/lib/solidity-util/\",\":@chainlink/contracts/=lib/chainlink/contracts/src/v0.8/\",\":@contracts/=src/\",\":@mock/=test/mock/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@openzeppelin/upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@script/=script/\",\":@struct/=src/struct/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":rollups-contracts/=lib/rollups-contracts/\",\":rollups/=lib/rollups/\",\":solidity-util/=lib/rollups/onchain/rollups-arbitration/lib/solidity-util/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/rollups-contracts/onchain/rollups/contracts/common/InputEncoding.sol\":{\"keccak256\":\"0x5dce266a7b70ba86adf6a728c7667255d3e2b20f1789a951150a1d05439b7019\",\"license\":\"Apache-2.0 (see LICENSE)\",\"urls\":[\"bzz-raw://dfbb391df0e0a27c0f7934eaccacf4dfaf5dc2e4b0d0c741e927d2fb03ab6e82\",\"dweb:/ipfs/QmeDr65kuA6VT7YTnce98gxh185p67uhno8movJcBM6PBL\"]},\"lib/rollups-contracts/onchain/rollups/contracts/inputs/IInputBox.sol\":{\"keccak256\":\"0x95e007391405e86eeb980be9a99e5cf15b34bb5b819292d206ef8a58f9c46c25\",\"license\":\"Apache-2.0 (see LICENSE)\",\"urls\":[\"bzz-raw://3f8829cc6de0b15d132587f8f79c7c8754bad5dd24d53dbc555e39633ab9b817\",\"dweb:/ipfs/QmRERK3dcULTDdqUkAxZXnnGtc2EpsPhf157DLyWcerA5U\"]},\"lib/rollups-contracts/onchain/rollups/contracts/inputs/IInputRelay.sol\":{\"keccak256\":\"0x8c9316c43cc2c7754fbd5abccfcdbc5ed09a2f1228d993240eac6c41ea531521\",\"license\":\"Apache-2.0 (see LICENSE)\",\"urls\":[\"bzz-raw://09c4be9619cd0e15c7756c464201983c0c9cd34d2bf1ffa9cbcfb396ca2b4dec\",\"dweb:/ipfs/QmfZSyuVYoreop5uvDZUpRCrQwKP92QHy2TTd8i6Mu4yX1\"]},\"lib/rollups-contracts/onchain/rollups/contracts/inputs/InputRelay.sol\":{\"keccak256\":\"0xbb489f157a0bd7a9da29b0bf3c47c4b4051d90ccd252abc3f81c8e897329e590\",\"license\":\"Apache-2.0 (see LICENSE)\",\"urls\":[\"bzz-raw://d2641c2b0f38d4732103c145c55477c46f68ee7c1970eb335d9b5e94ebb5e545\",\"dweb:/ipfs/QmdEVChDDx7CsNE4xm3KxS24w9kCanjH1BrTBBwhB2Y4pR\"]},\"lib/rollups-contracts/onchain/rollups/contracts/portals/EtherPortal.sol\":{\"keccak256\":\"0x47950c335ae2d0dd03b680d6fcd9cb26aa1333ecf6772b1f3a71a80100b8b34c\",\"license\":\"Apache-2.0 (see LICENSE)\",\"urls\":[\"bzz-raw://0ce743761dec5f8adbfb7561045d41ddf3e87b6ad2ac408cc6af3df265a5c606\",\"dweb:/ipfs/QmRpb5JF64m698rLF3dcdnJ16QoALLm4CZFLtWzkUvr3Et\"]},\"lib/rollups-contracts/onchain/rollups/contracts/portals/IEtherPortal.sol\":{\"keccak256\":\"0xa8bdb1f91935db3d7ba158935164e61f042da26a9abe872edccbff28614d9143\",\"license\":\"Apache-2.0 (see LICENSE)\",\"urls\":[\"bzz-raw://edde6c266725aaf8acbc2c9a7716bf949857fc2679c81b0e784e895748346e98\",\"dweb:/ipfs/QmeKBKwFAxMLzj9e9m23MspjH8F5XEbohCvNmWGwNDUi2s\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IInputBox",
              "name": "_inputBox",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EtherTransferFailed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_dapp",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_execLayerData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositEther"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getInputBox",
          "outputs": [
            {
              "internalType": "contract IInputBox",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_inputBox": "The input box used by the portal"
            }
          },
          "depositEther(address,bytes)": {
            "details": "All the value sent through this function is forwarded to the DApp.      If the transfer fails, `EtherTransferFailed` error is raised.",
            "params": {
              "_dapp": "The address of the DApp",
              "_execLayerData": "Additional data to be interpreted by the execution layer"
            }
          },
          "getInputBox()": {
            "returns": {
              "_0": "The input box"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructs the portal."
          },
          "depositEther(address,bytes)": {
            "notice": "Transfer Ether to a DApp and add an input to the DApp's input box to signal such operation. All the value sent through this function is forwarded to the DApp."
          },
          "getInputBox()": {
            "notice": "Get the input box used by this input relay."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cartesi/contracts/=lib/rollups-contracts/onchain/rollups/contracts/",
        "@cartesi/util/=lib/rollups-contracts/onchain/rollups-arbitration/lib/solidity-util/",
        "@chainlink/contracts/=lib/chainlink/contracts/src/v0.8/",
        "@contracts/=src/",
        "@mock/=test/mock/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@openzeppelin/upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@script/=script/",
        "@struct/=src/struct/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "rollups-contracts/=lib/rollups-contracts/",
        "rollups/=lib/rollups/",
        "solidity-util/=lib/rollups/onchain/rollups-arbitration/lib/solidity-util/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/rollups-contracts/onchain/rollups/contracts/portals/EtherPortal.sol": "EtherPortal"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303",
        "urls": [
          "bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0",
          "dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/rollups-contracts/onchain/rollups/contracts/common/InputEncoding.sol": {
        "keccak256": "0x5dce266a7b70ba86adf6a728c7667255d3e2b20f1789a951150a1d05439b7019",
        "urls": [
          "bzz-raw://dfbb391df0e0a27c0f7934eaccacf4dfaf5dc2e4b0d0c741e927d2fb03ab6e82",
          "dweb:/ipfs/QmeDr65kuA6VT7YTnce98gxh185p67uhno8movJcBM6PBL"
        ],
        "license": "Apache-2.0 (see LICENSE)"
      },
      "lib/rollups-contracts/onchain/rollups/contracts/inputs/IInputBox.sol": {
        "keccak256": "0x95e007391405e86eeb980be9a99e5cf15b34bb5b819292d206ef8a58f9c46c25",
        "urls": [
          "bzz-raw://3f8829cc6de0b15d132587f8f79c7c8754bad5dd24d53dbc555e39633ab9b817",
          "dweb:/ipfs/QmRERK3dcULTDdqUkAxZXnnGtc2EpsPhf157DLyWcerA5U"
        ],
        "license": "Apache-2.0 (see LICENSE)"
      },
      "lib/rollups-contracts/onchain/rollups/contracts/inputs/IInputRelay.sol": {
        "keccak256": "0x8c9316c43cc2c7754fbd5abccfcdbc5ed09a2f1228d993240eac6c41ea531521",
        "urls": [
          "bzz-raw://09c4be9619cd0e15c7756c464201983c0c9cd34d2bf1ffa9cbcfb396ca2b4dec",
          "dweb:/ipfs/QmfZSyuVYoreop5uvDZUpRCrQwKP92QHy2TTd8i6Mu4yX1"
        ],
        "license": "Apache-2.0 (see LICENSE)"
      },
      "lib/rollups-contracts/onchain/rollups/contracts/inputs/InputRelay.sol": {
        "keccak256": "0xbb489f157a0bd7a9da29b0bf3c47c4b4051d90ccd252abc3f81c8e897329e590",
        "urls": [
          "bzz-raw://d2641c2b0f38d4732103c145c55477c46f68ee7c1970eb335d9b5e94ebb5e545",
          "dweb:/ipfs/QmdEVChDDx7CsNE4xm3KxS24w9kCanjH1BrTBBwhB2Y4pR"
        ],
        "license": "Apache-2.0 (see LICENSE)"
      },
      "lib/rollups-contracts/onchain/rollups/contracts/portals/EtherPortal.sol": {
        "keccak256": "0x47950c335ae2d0dd03b680d6fcd9cb26aa1333ecf6772b1f3a71a80100b8b34c",
        "urls": [
          "bzz-raw://0ce743761dec5f8adbfb7561045d41ddf3e87b6ad2ac408cc6af3df265a5c606",
          "dweb:/ipfs/QmRpb5JF64m698rLF3dcdnJ16QoALLm4CZFLtWzkUvr3Et"
        ],
        "license": "Apache-2.0 (see LICENSE)"
      },
      "lib/rollups-contracts/onchain/rollups/contracts/portals/IEtherPortal.sol": {
        "keccak256": "0xa8bdb1f91935db3d7ba158935164e61f042da26a9abe872edccbff28614d9143",
        "urls": [
          "bzz-raw://edde6c266725aaf8acbc2c9a7716bf949857fc2679c81b0e784e895748346e98",
          "dweb:/ipfs/QmeKBKwFAxMLzj9e9m23MspjH8F5XEbohCvNmWGwNDUi2s"
        ],
        "license": "Apache-2.0 (see LICENSE)"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/rollups-contracts/onchain/rollups/contracts/portals/EtherPortal.sol",
    "id": 47976,
    "exportedSymbols": {
      "EtherPortal": [
        47975
      ],
      "IEtherPortal": [
        47991
      ],
      "IInputBox": [
        47683
      ],
      "InputEncoding": [
        47640
      ],
      "InputRelay": [
        47834
      ]
    },
    "nodeType": "SourceUnit",
    "src": "106:1282:45",
    "nodes": [
      {
        "id": 47903,
        "nodeType": "PragmaDirective",
        "src": "106:23:45",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ]
      },
      {
        "id": 47905,
        "nodeType": "ImportDirective",
        "src": "131:48:45",
        "nodes": [],
        "absolutePath": "lib/rollups-contracts/onchain/rollups/contracts/portals/IEtherPortal.sol",
        "file": "./IEtherPortal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47976,
        "sourceUnit": 47992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47904,
              "name": "IEtherPortal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47991,
              "src": "139:12:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47907,
        "nodeType": "ImportDirective",
        "src": "180:52:45",
        "nodes": [],
        "absolutePath": "lib/rollups-contracts/onchain/rollups/contracts/inputs/InputRelay.sol",
        "file": "../inputs/InputRelay.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47976,
        "sourceUnit": 47835,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47906,
              "name": "InputRelay",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47834,
              "src": "188:10:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47909,
        "nodeType": "ImportDirective",
        "src": "233:50:45",
        "nodes": [],
        "absolutePath": "lib/rollups-contracts/onchain/rollups/contracts/inputs/IInputBox.sol",
        "file": "../inputs/IInputBox.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47976,
        "sourceUnit": 47684,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47908,
              "name": "IInputBox",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47683,
              "src": "241:9:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47911,
        "nodeType": "ImportDirective",
        "src": "284:58:45",
        "nodes": [],
        "absolutePath": "lib/rollups-contracts/onchain/rollups/contracts/common/InputEncoding.sol",
        "file": "../common/InputEncoding.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47976,
        "sourceUnit": 47641,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47910,
              "name": "InputEncoding",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47640,
              "src": "292:13:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47975,
        "nodeType": "ContractDefinition",
        "src": "495:892:45",
        "nodes": [
          {
            "id": 47919,
            "nodeType": "ErrorDefinition",
            "src": "604:28:45",
            "nodes": [],
            "documentation": {
              "id": 47917,
              "nodeType": "StructuredDocumentation",
              "src": "550:49:45",
              "text": "@notice Raised when the Ether transfer fails."
            },
            "errorSelector": "6747a288",
            "name": "EtherTransferFailed",
            "nameLocation": "610:19:45",
            "parameters": {
              "id": 47918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:2:45"
            }
          },
          {
            "id": 47930,
            "nodeType": "FunctionDefinition",
            "src": "735:57:45",
            "nodes": [],
            "body": {
              "id": 47929,
              "nodeType": "Block",
              "src": "790:2:45",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 47920,
              "nodeType": "StructuredDocumentation",
              "src": "638:92:45",
              "text": "@notice Constructs the portal.\n @param _inputBox The input box used by the portal"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 47926,
                    "name": "_inputBox",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47923,
                    "src": "779:9:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInputBox_$47683",
                      "typeString": "contract IInputBox"
                    }
                  }
                ],
                "id": 47927,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 47925,
                  "name": "InputRelay",
                  "nameLocations": [
                    "768:10:45"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47834,
                  "src": "768:10:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "768:21:45"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 47924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47923,
                  "mutability": "mutable",
                  "name": "_inputBox",
                  "nameLocation": "757:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47930,
                  "src": "747:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInputBox_$47683",
                    "typeString": "contract IInputBox"
                  },
                  "typeName": {
                    "id": 47922,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47921,
                      "name": "IInputBox",
                      "nameLocations": [
                        "747:9:45"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47683,
                      "src": "747:9:45"
                    },
                    "referencedDeclaration": 47683,
                    "src": "747:9:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInputBox_$47683",
                      "typeString": "contract IInputBox"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:21:45"
            },
            "returnParameters": {
              "id": 47928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:0:45"
            },
            "scope": 47975,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47974,
            "nodeType": "FunctionDefinition",
            "src": "798:587:45",
            "nodes": [],
            "body": {
              "id": 47973,
              "nodeType": "Block",
              "src": "914:471:45",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    47939,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47939,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1065:7:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 47973,
                      "src": "1060:12:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 47938,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1060:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 47947,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 47945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1107:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 47940,
                          "name": "_dapp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47932,
                          "src": "1078:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1084:4:45",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1078:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 47944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 47942,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1096:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1100:5:45",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1096:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1078:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 47946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1059:51:45"
                },
                {
                  "condition": {
                    "id": 47949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1125:8:45",
                    "subExpression": {
                      "id": 47948,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47939,
                      "src": "1126:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47954,
                  "nodeType": "IfStatement",
                  "src": "1121:67:45",
                  "trueBody": {
                    "id": 47953,
                    "nodeType": "Block",
                    "src": "1135:53:45",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 47950,
                            "name": "EtherTransferFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47919,
                            "src": "1156:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 47951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1156:21:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47952,
                        "nodeType": "RevertStatement",
                        "src": "1149:28:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    47956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47956,
                      "mutability": "mutable",
                      "name": "input",
                      "nameLocation": "1211:5:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 47973,
                      "src": "1198:18:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 47955,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1198:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47965,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 47959,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1265:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1269:6:45",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1265:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 47961,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1289:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1293:5:45",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1289:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47963,
                        "name": "_execLayerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47934,
                        "src": "1312:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 47957,
                        "name": "InputEncoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47640,
                        "src": "1219:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InputEncoding_$47640_$",
                          "typeString": "type(library InputEncoding)"
                        }
                      },
                      "id": 47958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1233:18:45",
                      "memberName": "encodeEtherDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47488,
                      "src": "1219:32:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,uint256,bytes calldata) pure returns (bytes memory)"
                      }
                    },
                    "id": 47964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:117:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1198:138:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47969,
                        "name": "_dapp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47932,
                        "src": "1365:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47970,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47956,
                        "src": "1372:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47966,
                        "name": "inputBox",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47811,
                        "src": "1347:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInputBox_$47683",
                          "typeString": "contract IInputBox"
                        }
                      },
                      "id": 47968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1356:8:45",
                      "memberName": "addInput",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47664,
                      "src": "1347:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (address,bytes memory) external returns (bytes32)"
                      }
                    },
                    "id": 47971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1347:31:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 47972,
                  "nodeType": "ExpressionStatement",
                  "src": "1347:31:45"
                }
              ]
            },
            "baseFunctions": [
              47990
            ],
            "functionSelector": "938c054f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositEther",
            "nameLocation": "807:12:45",
            "overrides": {
              "id": 47936,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "905:8:45"
            },
            "parameters": {
              "id": 47935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47932,
                  "mutability": "mutable",
                  "name": "_dapp",
                  "nameLocation": "837:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47974,
                  "src": "829:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47934,
                  "mutability": "mutable",
                  "name": "_execLayerData",
                  "nameLocation": "867:14:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 47974,
                  "src": "852:29:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47933,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:68:45"
            },
            "returnParameters": {
              "id": 47937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "914:0:45"
            },
            "scope": 47975,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47913,
              "name": "InputRelay",
              "nameLocations": [
                "519:10:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47834,
              "src": "519:10:45"
            },
            "id": 47914,
            "nodeType": "InheritanceSpecifier",
            "src": "519:10:45"
          },
          {
            "baseName": {
              "id": 47915,
              "name": "IEtherPortal",
              "nameLocations": [
                "531:12:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47991,
              "src": "531:12:45"
            },
            "id": 47916,
            "nodeType": "InheritanceSpecifier",
            "src": "531:12:45"
          }
        ],
        "canonicalName": "EtherPortal",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 47912,
          "nodeType": "StructuredDocumentation",
          "src": "344:151:45",
          "text": "@title Ether Portal\n @notice This contract allows anyone to perform transfers of\n Ether to a DApp while informing the off-chain machine."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47975,
          47991,
          47834,
          47696
        ],
        "name": "EtherPortal",
        "nameLocation": "504:11:45",
        "scope": 47976,
        "usedErrors": [
          47919
        ],
        "usedEvents": []
      }
    ],
    "license": "Apache-2.0 (see LICENSE)"
  },
  "id": 45
}